Tak w największym skrócie interesują was pewnie
tasks.php - jeśli chodzi o zadania kwalifikacyjne,
warsztaty.php - w pozostałych przypadkach.
Patrząc na url w przeglądarce widać akcję, która jest wywoływana,
i to są po prostu funkcje - argumenty (pozostałe zmienne w URLu)
i uprawnienia trzeba obecnie explicite sprawdzać.

Najłatwiej się połapać patrząc na przykłady, np. w warsztaty.php akcja 
actionSignUpForWorkshop() jest wywoływana po kliknięciu w przycisk zapisu na dane warsztaty.
Mimo że działanie jest dość trywialne, to jednak kodu trochę jest.

$template = new SimpleTemplate(array('coś'=>'tam',...));
rozpoczyna bufor, i wszystko co się w tym momencie wypisze (echo) zostanie zwrócone w wywołaniu
$template->finish(); (a nie wypisane na ekran).
Template przy okazji zmieni wszystkie napisy '%coś%' na 'tam'.

Do edycji używam Geany - dość prosty edytor, który pokazuje listę funkcji w obecnym pliku - jako
że są one dość długie, a składają się praktycznie tylko z funkcji actionCośtam(),
to taki edytor ułatwia życie.

No i generalnie jest dużo syfu - przede wszystkim związanego z bazą danych,
w drugiej kolejności z formularzami - jest dużo rzeczy, które można by zrobić automatycznie,
dużo takich, które można uprościć. Póki co raczej robiłem byle by działało, po sesji zrobię większe
sprzątanie.

=== Zmienne globalne ===
$USER - zawiera wszystko co w bazie danych plus trochę, o obecnie zalogowanym userze, patrz user.php
$PAGE - zawartość budowanej strony, patrz template.php

== Baza danych ==
=== Funkcje ===
Generalnie wszystkie funkcje db_cośtam (zdefiniowane w common.php)
działają jak pg_cośtam opisane w manualu PHP,
tylko obsługują błędy i skrajne przypadki.
W db_query i db_query_params nazwę tabeli podaje się jako table_nazwa,
prefix table_ zostanie automatycznie zmieniony (aktualnie na w1_).
Poza tym są:
db_insert - generuje zapytanie INSERT
db_update - generuje zapytanie UPDATE (tylko trzeba podać WHERE)
db_fetch - skrót do zawołania db_fetch_row() i wzięcia jedynej wartości w wierszu.
db_get - generuje SELECT'a gdzie WHERE tylko przyrównuje PRIMARY KEY (czyli wid,uid,...)
Do tych funkcji nazwę tabeli podaje się bez prefixu.

== Pliki ==
"Pierwszego poziomu", czyli pliki, do których przeglądarka się bezpośredno odwołuje
index.php - po prostu wywołuje akcję podaną w URLu.
install.php - przestarzały plik, obecnie służy do dokumentacji schematu bazy danych
latex.php - obsługa latexa przez dystrybucję serwera. Obecnie zamiast tego używamy mimetex'a.


"Załączniki"
common.php - inicjuje różne drobne rzeczy i załącza pozostałe załączniki. Póki co wszystko co z bazą danych związane jest tam wrzucone.		
error.php - obługa błędów. 
	throw new KnownException('Nie udało się czegoś zrobić.');
	if (!userCan(...))  throw new PolicyException();
html.php - outputPage(), czyli treść każdej strony (template'u $PAGE), nagłówki http, <head>.
log.php - logowanie działań i wyświetlanie logów. logVisitor() obecnie nie jest używane.
	logUser('rodzaj akcji') warto wołać po każdym nietrywialnym formularzu. 
	
tasks.php - zadania kwalifikacyjne
template.php - różne ważne funkcje generujące html, patrz opis na górze pliku.
tutoring.php - tutoring. Zdezaktualizował się, trzeba będzie go przejrzeć przed ponownym włączeniem.
update.php - zmiany, które trzeba wykonać dokładnie raz,
	przeważnie w bazie danych (ALTER TABLE i UPDATE), nowe uprawnienia też dodajemy tutaj.
user.php - użytkownicy, profile, ich administracja, list motywacyjny
	userCan('nazwaAkcji', $owner) - sprawdza czy obecny użytkownik ma dane uprawnienie.
		Jeżeli podano $owner (jeden uid lub tablica uidów), to sprawdzane jest,
		czy użytkownik jest właścicielem, co dodaje mu rolę 'owner'.
	getUserBadge($uid) - zwraca imię i nazwisko danego uid'u z ikonką profilu.	
	gender('końcówka męska', 'końcówka żeńska' [, $rodzaj_gramatyczny]) - kiedy chcemy wyświetlić
		poprawny gramatycznie napis. Np. showMessage('Był'. gender('e','a') .'ś');
	assertUser() - przestarzała funckja do sprawdzania roli
utils.php - akcje dotyczące serwisu (bugReport, ustawienia), sendMail()
	Jeżeli chcemy umożliwić adminom łatwą zmianę jakiegoś ustawienia, 
	tworzymy odpowiedni wiersz w tabeli table_options, będzie widoczny w "Ustawienia"ch,
	i można go wtedy odczytać za pomocą getOption().
warsztaty.php - warsztaty, listy warsztatów, opisy.



"Pozostałe" - czyli pliki nie-php
cgi-bin/ - skrypty do uploadowania plików i obsługi texa
common.js - wszelki częściej potrzebny javascript, póki co tylko obsługa tooltipów
css.css - jedyny plik z CSS-em, czyli szczegółami wyglądu strony
google855eeace7768856d.html - plik potrzebny narzędziom google'a
iecsshover3.htc - naprawia parę rzeczy w IE
images/fatcow/, images/twotiny/ - paczki ikonek, nie są bezpośrednio na serwerze
images/icons/ - ikonki 16x16 i mniejsze są łączone w jeden obrazek .png, żeby się
	szybciej ładowało. W celu połączenia kopiujemy ikonkę do tego folderu, wywołujemy
	python make_master.py, a na serwer wrzucamy tylko icons_png.css i master.png.
images/ - zawsze obrazek można wrzucić po prostu tutaj i odwoływać się normalnie (a nie np. funkcją getIcon()).
latex/ - obsługa latexa przez dystrybucję serwera. Obecnie zamiast tego używamy mimetex'a.
phpmailer/ - moduł do obsługi maila m.in. przez IMAP, patrz utils.php::sendMail.
tinymce/ - moduł TinyMCE - dość skomplikowany, więc raczej nie ruszać.
todo.txt - moja lista rzeczy do zrobienia
uploader/ - moduł to uploadowani plików z paskiem postępu
